!function(){"use strict";var componentHandler = function() {
    "use strict";

    function e(e, t) {
        for (var s = 0; s < c.length; s++)
            if (c[s].className === e) return void 0 !== t && (c[s] = t), c[s];
        return !1
    }

    function t(e) {
        var t = e.getAttribute("data-upgraded");
        return null === t ? [""] : t.split(",")
    }

    function s(e, s) {
        var i = t(e);
        return -1 !== i.indexOf(s)
    }

    function i(t, s) {
        if (void 0 === t && void 0 === s)
            for (var a = 0; a < c.length; a++) i(c[a].className, c[a].cssClass);
        else {
            var l = t;
            if (void 0 === s) {
                var r = e(l);
                r && (s = r.cssClass)
            }
            for (var o = document.querySelectorAll("." + s), d = 0; d < o.length; d++) n(o[d], l)
        }
    }

    function n(i, n) {
        if (!("object" == typeof i && i instanceof Element)) throw new Error("Invalid argument provided to upgrade MDL element.");
        var a = t(i),
            l = [];
        if (n) s(i, n) || l.push(e(n));
        else {
            var r = i.classList;
            c.forEach(function(e) {
                r.contains(e.cssClass) && -1 === l.indexOf(e) && !s(i, e.className) && l.push(e)
            })
        }
        for (var o, d = 0, _ = l.length; _ > d; d++) {
            if (o = l[d], !o) throw new Error("Unable to find a registered component for the given class.");
            a.push(o.className), i.setAttribute("data-upgraded", a.join(","));
            var h = new o.classConstructor(i);
            h[C] = o, u.push(h);
            for (var p = 0, E = o.callbacks.length; E > p; p++) o.callbacks[p](i);
            o.widget && (i[o.className] = h);
            var m = document.createEvent("Events");
            m.initEvent("mdl-componentupgraded", !0, !0), i.dispatchEvent(m)
        }
    }

    function a(e) {
        Array.isArray(e) || (e = "function" == typeof e.item ? Array.prototype.slice.call(e) : [e]);
        for (var t, s = 0, i = e.length; i > s; s++) t = e[s], t instanceof HTMLElement && (t.children.length > 0 && a(t.children), n(t))
    }

    function l(t) {
        var s = {
            classConstructor: t.constructor,
            className: t.classAsString,
            cssClass: t.cssClass,
            widget: void 0 === t.widget ? !0 : t.widget,
            callbacks: []
        };
        if (c.forEach(function(e) {
                if (e.cssClass === s.cssClass) throw new Error("The provided cssClass has already been registered.");
                if (e.className === s.className) throw new Error("The provided className has already been registered")
            }), t.constructor.prototype.hasOwnProperty(C)) throw new Error("MDL component classes must not have " + C + " defined as a property.");
        var i = e(t.classAsString, s);
        i || c.push(s)
    }

    function r(t, s) {
        var i = e(t);
        i && i.callbacks.push(s)
    }

    function o() {
        for (var e = 0; e < c.length; e++) i(c[e].className)
    }

    function d(e) {
        for (var t = 0; t < u.length; t++) {
            var s = u[t];
            if (s.element_ === e) return s
        }
    }

    function _(e) {
        if (e && e[C].classConstructor.prototype.hasOwnProperty(p)) {
            e[p]();
            var t = u.indexOf(e);
            u.splice(t, 1);
            var s = e.element_.getAttribute("data-upgraded").split(","),
                i = s.indexOf(e[C].classAsString);
            s.splice(i, 1), e.element_.setAttribute("data-upgraded", s.join(","));
            var n = document.createEvent("Events");
            n.initEvent("mdl-componentdowngraded", !0, !0), e.element_.dispatchEvent(n)
        }
    }

    function h(e) {
        var t = function(e) {
            _(d(e))
        };
        if (e instanceof Array || e instanceof NodeList)
            for (var s = 0; s < e.length; s++) t(e[s]);
        else {
            if (!(e instanceof Node)) throw new Error("Invalid argument provided to downgrade MDL nodes.");
            t(e)
        }
    }
    var c = [],
        u = [],
        p = "mdlDowngrade_",
        C = "mdlComponentConfigInternal_";
    return {
        upgradeDom: i,
        upgradeElement: n,
        upgradeElements: a,
        upgradeAllRegistered: o,
        registerUpgradedCallback: r,
        register: l,
        downgradeElements: h
    }
}();var e=function(e){this.element_=e,this.init()};window.MaterialSelectfield=e,e.prototype.Constant_={},e.prototype.CssClasses_={LABEL:"mdl-selectield__label",SELECT:"mdl-selectfield__select",IS_DIRTY:"is-dirty",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_INVALID:"is-invalid",IS_UPGRADED:"is-upgraded"},e.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},e.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},e.prototype.onReset_=function(e){this.updateClasses_()},e.prototype.updateClasses_=function(){this.checkDisabled(),this.checkValidity(),this.checkDirty()},e.prototype.checkDisabled=function(){this.select_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},e.prototype.checkDisabled=e.prototype.checkDisabled,e.prototype.checkValidity=function(){this.select_.validity.valid?this.element_.classList.remove(this.CssClasses_.IS_INVALID):this.element_.classList.add(this.CssClasses_.IS_INVALID)},e.prototype.checkValidity=e.prototype.checkValidity,e.prototype.checkDirty=function(){this.select_.value&&this.select_.value.length>0?this.element_.classList.add(this.CssClasses_.IS_DIRTY):this.element_.classList.remove(this.CssClasses_.IS_DIRTY)},e.prototype.checkDirty=e.prototype.checkDirty,e.prototype.disable=function(){this.select_.disabled=!0,this.updateClasses_()},e.prototype.disable=e.prototype.disable,e.prototype.enable=function(){this.select_.disabled=!1,this.updateClasses_()},e.prototype.enable=e.prototype.enable,e.prototype.change=function(e){e&&(this.select_.value=e),this.updateClasses_()},e.prototype.change=e.prototype.change,e.prototype.init=function(){if(this.element_&&(this.label_=this.element_.querySelector("."+this.CssClasses_.LABEL),this.select_=this.element_.querySelector("."+this.CssClasses_.SELECT),this.select_)){if(this.boundUpdateClassesHandler=this.updateClasses_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.boundResetHandler=this.onReset_.bind(this),this.select_.addEventListener("change",this.boundUpdateClassesHandler),this.select_.addEventListener("focus",this.boundFocusHandler),this.select_.addEventListener("blur",this.boundBlurHandler),this.select_.addEventListener("reset",this.boundResetHandler),"function"==typeof MaterialMenu){var e=this,t="plc-"+(new Date).getTime(),s=document.createElement("div");if(s.id=t,s.classList.add("mdl-selectfield__placeholder"),s.innerHTML='<i class="material-icons" tabindex="-1">arrow_drop_down</i>',s.addEventListener("click",function(){e.select_.focus()}),this.element_.appendChild(s),this.options_=this.select_.querySelectorAll("option"),this.options_.length){var i=document.createElement("ul");i.classList.add("mdl-menu"),i.classList.add("mdl-js-menu"),i.classList.add("mdl-js-ripple-effect"),i.tabIndex="-1",i.setAttribute("for",t),i.addEventListener("mousewheel",function(e){(this.scrollTop===this.scrollHeight-this.offsetHeight&&e.wheelDelta<0||0===this.scrollTop&&e.wheelDelta>0)&&e.preventDefault()});for(var l=0;l<this.options_.length;l++){var n=this.options_[l],a=((n.textContent||"").toUpperCase().replace(/( )|(\n)/g,""),document.createElement("li"));a.textContent=n.textContent,a.classList.add("mdl-menu__item"),a.setAttribute("data-value",l),a.tabIndex="-1",a.addEventListener("mousedown",function(){e.select_.selectedIndex=this.getAttribute("data-value"),e.updateClasses_()}),i.appendChild(a),this.element_.appendChild(i)}}componentHandler.upgradeDom("MaterialMenu")}this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},e.prototype.mdlDowngrade_=function(){this.select_.removeEventListener("change",this.boundUpdateClassesHandler),this.select_.removeEventListener("focus",this.boundFocusHandler),this.select_.removeEventListener("blur",this.boundBlurHandler),this.select_.removeEventListener("reset",this.boundResetHandler)},componentHandler.register({constructor:e,classAsString:"MaterialSelectfield",cssClass:"mdl-js-selectfield",widget:!0})}();
//# sourceMappingURL=mdl-selectfield.min.js.map